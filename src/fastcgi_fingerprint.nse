description = [[
Attempts to determine whether or not a TCP service is running FastCGI.
]]

author = "Christopher Grayson, Marc Newlin"

categories = {"default", "discovery", "safe"}

license = "Same as Nmap--See https://nmap.org/book/man-legal.html"

portrule = function(host, port)
	return port.protocol == "tcp" and port.state == "open"
end

action = function(host, port)

	local fcgi_connection = nmap.new_socket()

	local catch = function()
		fcgi_connection:close()
	end

	local try = nmap.new_try(catch)

	try(fcgi_connection:connect(host.ip, port.number))

	-- local request

	-- "\x01\t\x00\x00\x000\x00\x00\x0e\x00FCGI_MAX_CONNS\x0f\x00FCGI_MPXS_CONNS\r\x00FCGI_MAX_REQS" Python string for management request

	local request = '\001\009\000\000\000\048\000\000\014\000\070\067\071\073\095\077\065\088\095\067\079\078\078\083\015\000\070\067\071\073\095\077\080\088\083\095\067\079\078\078\083\013\000\070\067\071\073\095\077\065\088\095\082\069\081\083'

	try(fcgi_connection:send(request))

	local status, response = fcgi_connection:receive()

	try(fcgi_connection:close())

	local to_return = nil

	-- if status and string.find(response, "Status:") or string.find(response, "Content-") or string.find(response, "No input file") then
	-- 	to_return = "FastCGI server found."
	-- end

	if status and (string.find(response, "FCGI_MAX_REQS") or string.find(response, "FCGI_MAX_CONNS") or string.find(response, "FCGI_MPXS_CONNS")) then
		to_return = "FastCGI server found."
	end

	return to_return

end